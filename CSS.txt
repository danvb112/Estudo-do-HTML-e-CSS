CSS

- No arquivo CSS selecionando o cabeçalho especifico, podemos utilizar parâmetros para estilizar nossa
página EX:

h1 {
    font-size: 60px;
    background-color: rgb(120, 30, 60);
    color: #FAFFFA;
    text-align: center;
    font-family: "Arial";
}

- o parâmetro "font-size" serve para determinar o tamanho da fonte em pixels

- o parâmetro "background-color" serve para alterar a cor de fundo usando a configuração rgb(red, green,
blue)

- o parâmetro "color" serve para alterar a cor do texto usando uma configuração hexadecimal

- o parâmetro "text-align" serve para determinar a centralidade do texto

- o parâmetro "font-family" serve para determinar o tipo da fonte utilizada no texto

- O parâmetro "text-decoration" coloca ou tira o sublinhado do texto podendo-se usar o "none" para não
ter sublinhamento e "underline" para sublinhar

- O parâmetro "padding" serve para ajustar os espaçamentos

- O parâmetro "border serve para colocar uma borda no layout, tendo que ser especificado o tamanho, tipo
e cor da borda EX:. border: 10px solid #C2CCCA

- O parâmetro "width" serve para ajustar a largura da estrutura interna 

- O parâmetro "margin" serve para controlar as margens externas da estrutura, se utilizar o atributo
"auto" a margem centraliza automaticamente

- Para indicar para o navegador que estamos querendo calcular as margens a partir das bordas, usamos o 
parâmetro "box-sizing" que diz se queremos calcular a margem a partir do conteúdo (content-box) ou das
bordas (border-box)

- O parâmetro "list-style-type" junto com a propriedade "none" tira as bolinhas na lista de links

- O parâmetro "line-height" controla o espaço entre as linhas de texto

- é possivel também desenhar bordas com cores diferentes utilizando o parâmetro " border-bottom-color"
por exemplo.

- O parâmetro "display" permite controlarmos o empilhamento ou posicionamento dos elementos na nossa 
página sendo os atributos "block" para empilhar, "inline" para deixar na mesma linha. Mas o "inline"
não permite controlar a altura do elemento, pra isso criaram o atributo "inline-block".

- Podemos agora, no nosso código, ter seletores diferentes para o mesmo elemento. Por exemplo o elemento
"<div class=texto>" pode ser selecionado tanto pelo seletor div como pelo seletor .texto. Quando aconte-
ce um conflito desse tipo, o navegador escohle o estilo declarado no seletor mais específico.

- Como podemos colocar mais de uma classe em um elemento. é possível que haja conflito entre regras de-
claradas nas duas classes. Por exemplo: <div class="destaque titulo-principal">. Se fizermos um elemento
com ambas as classes, o navegador precisa decidir quais prorpiedades de cada classe uzar. O critério de
desempate é qual das calsses aparece por ultimo no arquivo CSS.

- o Parâmetro "text-transform" altera as letras do nosso texto, podendo usar a prorpriedade "uppercase"
para deixar todas as letras em maiúsculas.

- Sêmanticamente fica melhor colocar as imagens pelo CSS do que pelo HTML, utilizando o parâmetro "back-
ground-image" e a propriedade "url" colocamos o nome do arquivo da imagem. Os links os quais as imagens
se referem, ficam no HTML. Para um não ficar sobreposto ao outro, usamos uma técnica chamada image re-
placement que consiste em usar o parâmetro "text-indent" junto com a quantidade de pixels. Esse parâme-
tro ira deslocar a primeira linha do texto para direita se for positivo ou esquerda se for negativo, 
permitindo que somente as imagens fiquem visíveis mas os links continuem clicáveis. Pra que todos os
links não fiquem com a mesma imagem, é necessário que cada imagem vire uma classe no HTML e possa ser
selecionada individualmente no CSS.

- Existe outras formas de fazer um image replacement como por exemplo colocando o font-size: 0px ou um
color: trasparent. O problema de se utilizar o text-indent com um valor muito grande é que gastará bas-
tante memória para poder exibir a página, pois ele levará em consideração um valor muito grande para 
fazer os cálculos, por outro lado, usar o font-size: 0px não é bem interpretado por todos os navegadores
alguns simplismente ignoram uma declaração desse tipo, outros mesmo com o tramanho zerado, mostram o 
texto numa fonte pequena.

- O parâmetro float serve para fazer os elementos sairem do fluxo padrão de empilhamento, permitindo que
eles flutuem na página, podendo ser usado as prorpiedades "left" e "right" para flutuarem a direita e 
esquerda. Como o float faz com que o elemento saia do fluxo, o resto do conteúdo da página sobe. Assim, 
se outro float vem logo em seguida no fluxo, esse outro float acabará na mesma altura do primeiro float, 
independente do lado em que ele vai ficar.

- Junto do float existe um parâmetro chamdo clear que permite controlar até que ponto as coisas devem 
ficar ao lado do float tendo parâmetros como "left", "right" e "both" para controlar os espaçamentos 
dos floats à esquerda, direita ou ambos os lados

- Todos os floats colocados em sequência e sem o clear formam uma linha.

- O parâmetro float no entanto, nos permite posicionar os elementos de forma limitada, Para podermos po-
sicionar elementos com controle total, precisamos da propriedade "position" e seus parâmetros "top",
"left", "bottom" e "right". O comportamento dessas quatro últimas propriedades muda bastante de acordo
com o valor passado à propriedade position.

- Quando passamos o valor "relative" para a propriedade "position", conseguimos mudar a posição do ele-
mento de acordo com a posição original dele. Por exemplo, deslocar a foto de sua posição original para
tentar aumenta-la depois.

- Para conseguir esse efeito, usamos o position: relative em conjunto com top e right, inserindo espaço
no topo e na direita:

img {
    position: relative;
    top: 30px;
    right: 30px;
}

- Quando falamos de posicionar elementos na página independentemente od resto do conteúdo, estamos fa-
lando de umsar o calor "absolute" da propriedade "position". Com ele, podemos colocar um elemento onde
quisermos na página.

- Outro valor da propriedade "position" é o "fixed". Ele nos permite deixar um elemento no lugar que 
quisermos da janela usando, também, as propriedades "top", "left", "bottom" e "right" para determinar
a distância do elemento para esses quatro cantos da janela.

-




